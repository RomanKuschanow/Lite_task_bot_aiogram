import inspect

from loader import bot, _
from services.reminder import get_all_actual_by_user_id


def vip(limit=None):
    def wrapper(func):
        async def decorator(*args, **kwargs):
            user = kwargs['user']

            if not user:
                return False

            if user.is_admin or user.is_vip:
                return await _attributes_check(func, args, kwargs)

            session = kwargs['session']
            reminders = await get_all_actual_by_user_id(session, user.id)

            text = _(
                '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º —Ç–æ–∂–µ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –∫—É—à–∞—Ç—å, –ø–æ —ç—Ç–æ–º—É –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ —Ñ–∏–ª—å—Ç—Ä—ã, '
                '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ —Å–æ—Ö–¥–∞–Ω–∏–µ –±–æ–µ–µ –ø—è—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∑–∞ —Ä–∞–∑ —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ '
                '–Ω–µ–±–æ–ª—å—à–æ–≥–æ –¥–µ–Ω–µ–∂–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞. –ù–∞—Å–∫–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∏—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞, —Ä–µ—à–∞–µ—Ç–µ –≤—ã, –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É '
                '–æ—Ç–∫—Ä–æ–µ—Ç—å—Å—è –ø–æ—Å–ª–µ –ª—é–±–æ–π —Å—É–º–º—ã. –í–∫–æ–Ω—Ü–µ –∫–æ–Ω—Ü–æ–≤, –Ω–∏–∫—Ç–æ –Ω–µ –º–µ—à–∞–µ—Ç –≤–∞–º –∑–∞–¥–æ–Ω–∞–Ω–∏—Ç—å –µ—â–µ —Ä–∞–∑, –µ—Å–ª–∏ –≤—ã —Ç–æ–≥–æ '
                '–ø–æ–∂–µ–ª–∞–µ—Ç–µ üòâ. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤–≤–µ–¥—è –¥–æ–º–∞–Ω–¥—É /donate')

            if limit:
                if len(reminders) < 5:
                    return await _attributes_check(func, args, kwargs)
                else:
                    await bot.send_message(user.id, text=text)
                    return False
            else:
                await bot.send_message(user.id, text=text)
                return False

        return decorator

    return wrapper


async def _attributes_check(func, args, kwargs: dict):
    func_args_list = inspect.getfullargspec(func).args

    kwargs = {k: v for k, v in kwargs.items() if k in func_args_list}

    return await func(*args, **kwargs)
